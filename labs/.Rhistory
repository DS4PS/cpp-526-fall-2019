knitr::opts_chunk$set(echo = TRUE, message=F, warning=F)
library( dplyr )
library( pander )
library( Lahman )
knitr::opts_chunk$set(echo=F, fig.width=10, fig.height=6, warning=F, message=F )
reg.dat <- read.csv("../data-and-analysis/data-prepped/RegressionData.csv")
dat <- reg.dat
library( stargazer )
library( pander )
library( dplyr )
names( dat )
jplot <- function( x1, x2, lab1="", lab2="", draw.line=T, ... )
{
plot( x1, x2,
pch=19,
col=gray(0.6, alpha = 0.2),
cex=3.5,
bty = "n",
xlab=lab1,
ylab=lab2, cex.lab=1.5,
... )
if( draw.line==T ){
ok <- is.finite(x1) & is.finite(x2)
lines( lowess(x2[ok]~x1[ok]), col="red", lwd=3 ) }
}
dat$np <- dat$NPOWealthFacZ
dat$bm <- dat$CMWealthFacZ
dat$status <- dat$NPOWealthFacZ - dat$BMWealthFacZ
d3 <- sample_n( dat, 100 )
jplot( d3$np, d3$status  )
jplot( d3$NPOUrbanFacZ, d3$status )
jplot( d3$NPOWealthFacZ, d3$status )
jplot( d3$NPOWealthFacZ, d3$BMWealthFacZ )
d3 <- sample_n( dat, 250 )
jplot( d3$NPOWealthFacZ, d3$BMWealthFacZ )
d3 <- sample_n( dat, 100 )
jplot( d3$NPOWealthFacZ, d3$BMWealthFacZ )
summary( lm( BMWealthFacZ ~ NPOWealthFacZ, data=dat ))
options( scipen=6 )
summary( lm( BMWealthFacZ ~ NPOWealthFacZ, data=dat ))
options( scipen=8 )
summary( lm( BMWealthFacZ ~ NPOWealthFacZ, data=dat ))
jplot( dat$NPOWealthFacZ, dat$BMWealthFacZ )
summary( lm( status ~ NPOWealthFacZ, data=dat ))
names(d3)
d3$log.dist.np <- log(d3$dist.to.npo+1)
d3$log.dist.bm <- log(d3$ave.dist+1)
d4 <- filter( d3, np, bm, status, log.dist.np, log.dist.bm )
dat$np <- dat$NPOWealthFacZ
dat$bm <- dat$CMWealthFacZ
dat$status <- dat$NPOWealthFacZ - dat$BMWealthFacZ
d3 <- dat
d3$log.dist.np <- log(d3$dist.to.npo+1)
d3$log.dist.bm <- log(d3$ave.dist+1)
d4 <- filter( d3, np, bm, status, log.dist.np, log.dist.bm )
reg.dat <- read.csv("../data-and-analysis/data-prepped/RegressionData.csv")
dat <- reg.dat
dat$np <- dat$NPOWealthFacZ
dat$bm <- dat$CMWealthFacZ
dat$status <- dat$NPOWealthFacZ - dat$BMWealthFacZ
d3 <- dat
d3$log.dist.np <- log(d3$dist.to.npo+1)
d3$log.dist.bm <- log(d3$ave.dist+1)
d4 <- filter( d3, np, bm, status, log.dist.np, log.dist.bm )
dat$bm <- dat$BMWealthFacZ
d3 <- dat
d3$log.dist.np <- log(d3$dist.to.npo+1)
d3$log.dist.bm <- log(d3$ave.dist+1)
d4 <- filter( d3, np, bm, status, log.dist.np, log.dist.bm )
cor( d4 )
head( d4 )
d3 <- dat
d3$log.dist.np <- log(d3$dist.to.npo+1)
d3$log.dist.bm <- log(d3$ave.dist+1)
d4 <- select( d3, np, bm, status, log.dist.np, log.dist.bm )
cor( d4 )
d3 <- dat
d3$log.dist.np <- log(d3$dist.to.npo+1)
d3$log.dist.bm <- log(d3$ave.dist+1)
d4 <- select( d3, np, bm, status, log.dist.np, log.dist.bm )
cor( d4 )
m1 <- lm( bm ~ np + log.dist.np + log.dist.bm, data=d4 )
m2 <- lm( status ~ np + log.dist.np + log.dist.bm, data=d4 )
stargazer( m1, m2, type="text" )
1 - 0.363
d3 <- dat
d3$log.dist.np <- log(d3$dist.to.npo+1)
d3$log.dist.bm <- log(d3$ave.dist+1)
d4 <- select( d3, np, bm, status, log.dist.np, log.dist.bm )
cor( d4 )
m1 <- lm( bm ~ np + log.dist.np + log.dist.bm, data=d4 )
m2 <- lm( status ~ np + log.dist.np, data=d4 )
m3 <- lm( status ~ np  + log.dist.bm, data=d4 )
m4 <- lm( status ~ np + log.dist.np + log.dist.bm, data=d4 )
stargazer( m1, m2, m3, m4, type="text" )
stargazer( m2, m3, m4, type="text" )
cor( d4 )
stargazer( m2, m3, m4, type="text",
keep.stat=c("n", "adj.rsq") )
stargazer( m1, m4, type="text",
keep.stat=c("n", "adj.rsq") )
stargazer( m2, m3, m4, type="text",
keep.stat=c("n", "adj.rsq") )
m5 <- lm( status ~ bm + log.dist.np, data=d4 )
m6 <- lm( status ~ bm  + log.dist.bm, data=d4 )
m7 <- lm( status ~ bm + log.dist.np + log.dist.bm, data=d4 )
stargazer( m5, m6, m7, type="text",
keep.stat=c("n", "adj.rsq") )
m5 <- lm( bm ~ np + log.dist.np, data=d4 )
m6 <- lm( bm ~ np  + log.dist.bm, data=d4 )
m7 <- lm( bm ~ np + log.dist.np + log.dist.bm, data=d4 )
stargazer( m5, m6, m7, type="text",
keep.stat=c("n", "adj.rsq") )
d5 <- sample_n( d4 , 500 )
par( mfrow=c(2,2) )
jplot( d5$log.dist.np, d5$bm )
jplot( d5$log.dist.bm, d5$bm )
jplot( d5$log.dist.np, d5$status )
jplot( d5$log.dist.bm, d5$status )
d5 <- sample_n( d4 , 500 )
par( mfrow=c(2,2) )
jplot( d5$log.dist.np, d5$bm )
jplot( d5$log.dist.bm, d5$bm )
jplot( d5$log.dist.np, d5$status )
jplot( d5$log.dist.bm, d5$status )
d5 <- sample_n( d4 , 500 )
par( mfrow=c(2,2) )
jplot( d5$log.dist.np, d5$bm, lab1="Dist to NP", lab2="BM Wealth" )
jplot( d5$log.dist.bm, d5$bm, lab1="Dist btwn BM", lab2="BM Wealth" )
jplot( d5$log.dist.np, d5$status )
jplot( d5$log.dist.bm, d5$status )
par( mfrow=c(2,2) )
jplot( d5$log.dist.np, d5$bm, lab1="Dist to NP", lab2="BM Wealth" )
jplot( d5$log.dist.bm, d5$bm, lab1="Dist btwn BM", lab2="BM Wealth" )
jplot( d5$log.dist.np, d5$status, lab1="Dist to NP", lab2="BM Status" )
jplot( d5$log.dist.bm, d5$status, lab1="Dist btwn BM", lab2="BM Status" )
names( d5 )
partition_reg <- function( y, x, controls, df, lab1="", lab2="" )
{
fm1 <- as.formula( paste( "y ~ ", paste( controls, collapse= "+" ) ) )
fm2 <- as.formula( paste( "x ~ ", paste( controls, collapse= "+" ) ) )
reg1 <- lm( fm1, data=df )
reg2 <- lm( fm2, data=df )
center <- 1
for( i in 1:length(controls) )
{
ave.i <- mean( unlist( df[ controls[i] ] ), na.rm=T )
center <- c( center, ave.i )
}
y.c <- sum( reg1$coefficients * center ) + reg1$residuals
x.c <- sum( reg2$coefficients * center ) + reg2$residuals
summary( lm( y.c ~ x.c ) )
samp <- sample( 1:length(x.c), 500 )
plot( x.c[samp], y.c[samp], bty="n", col=gray(0.5,0.5), pch=19, cex=1,
xlab=lab1, ylab=lab2 )
lines( stats::lowess( x.c, y.c ), col="red", lwd=2 )
}
d6 <- filter( d5, status, np, log.dist.np, log.dist.bm )
partition_reg( y=d6$status,
x=d6$log.dist.np,
controls=c("np","log.dist.bm"),
df=d6 )
partition_reg <- function( y, x, controls, df, lab1="", lab2="" )
{
fm1 <- as.formula( paste( "y ~ ", paste( controls, collapse= "+" ) ) )
fm2 <- as.formula( paste( "x ~ ", paste( controls, collapse= "+" ) ) )
reg1 <- lm( fm1, data=df )
reg2 <- lm( fm2, data=df )
center <- 1
for( i in 1:length(controls) )
{
ave.i <- mean( unlist( df[ controls[i] ] ), na.rm=T )
center <- c( center, ave.i )
}
y.c <- sum( reg1$coefficients * center ) + reg1$residuals
x.c <- sum( reg2$coefficients * center ) + reg2$residuals
summary( lm( y.c ~ x.c ) )
samp <- sample( 1:length(x.c), 500 )
plot( x.c[samp], y.c[samp], bty="n", col=gray(0.5,0.5), pch=19, cex=1,
xlab=lab1, ylab=lab2 )
lines( stats::lowess( x.c, y.c ), col="red", lwd=2 )
}
d6 <- select( d4, status, np, log.dist.np, log.dist.bm )
partition_reg( y=d6$status,
x=d6$log.dist.np,
controls=c("np","log.dist.bm"),
df=d6 )
d6 <- select( d4, status, bm, np, log.dist.np, log.dist.bm )
partition_reg( y=d6$status,
x=d6$log.dist.np,
controls=c("np","log.dist.bm"),
df=d6 )
partition_reg( y=d6$status,
x=d6$log.dist.bm,
controls=c("np","log.dist.np"),
df=d6 )
partition_reg( y=d6$log.dist.np,
x=d6$log.dist.bm,
controls=c("np"),
df=d6 )
partition_reg( y=d6$log.dist.bm,
x=d6$log.dist.np,
controls=c("np"),
df=d6 )
partition_reg <- function( y, x, controls, df, lab1="", lab2="" )
{
fm1 <- as.formula( paste( "y ~ ", paste( controls, collapse= "+" ) ) )
fm2 <- as.formula( paste( "x ~ ", paste( controls, collapse= "+" ) ) )
reg1 <- lm( fm1, data=df )
reg2 <- lm( fm2, data=df )
center <- 1
for( i in 1:length(controls) )
{
ave.i <- mean( unlist( df[ controls[i] ] ), na.rm=T )
center <- c( center, ave.i )
}
y.c <- sum( reg1$coefficients * center ) + reg1$residuals
x.c <- sum( reg2$coefficients * center ) + reg2$residuals
summary( lm( y.c ~ x.c ) )
samp <- sample( 1:length(x.c), 500 )
plot( x.c[samp], y.c[samp], bty="n", col=gray(0.5,0.5), pch=19, cex=1,
xlab=lab1, ylab=lab2, xlim=c(0,8), ylim=c(0,8) )
lines( stats::lowess( x.c, y.c ), col="red", lwd=2 )
}
d6 <- select( d4, status, bm, np, log.dist.np, log.dist.bm )
partition_reg( y=d6$status,
x=d6$log.dist.np,
controls=c("np","log.dist.bm"),
df=d6 )
partition_reg( y=d6$log.dist.bm,
x=d6$log.dist.np,
controls=c("np"),
df=d6 )
args( abline )
partition_reg <- function( y, x, controls, df, lab1="", lab2="" )
{
fm1 <- as.formula( paste( "y ~ ", paste( controls, collapse= "+" ) ) )
fm2 <- as.formula( paste( "x ~ ", paste( controls, collapse= "+" ) ) )
reg1 <- lm( fm1, data=df )
reg2 <- lm( fm2, data=df )
center <- 1
for( i in 1:length(controls) )
{
ave.i <- mean( unlist( df[ controls[i] ] ), na.rm=T )
center <- c( center, ave.i )
}
y.c <- sum( reg1$coefficients * center ) + reg1$residuals
x.c <- sum( reg2$coefficients * center ) + reg2$residuals
summary( lm( y.c ~ x.c ) )
samp <- sample( 1:length(x.c), 500 )
plot( x.c[samp], y.c[samp], bty="n", col=gray(0.5,0.5), pch=19, cex=1,
xlab=lab1, ylab=lab2, xlim=c(0,8), ylim=c(0,8) )
lines( stats::lowess( x.c, y.c ), col="red", lwd=2 )
ablines( b=1, col="blue" )
}
d6 <- select( d4, status, bm, np, log.dist.np, log.dist.bm )
partition_reg( y=d6$status,
x=d6$log.dist.np,
controls=c("np","log.dist.bm"),
df=d6 )
partition_reg <- function( y, x, controls, df, lab1="", lab2="" )
{
fm1 <- as.formula( paste( "y ~ ", paste( controls, collapse= "+" ) ) )
fm2 <- as.formula( paste( "x ~ ", paste( controls, collapse= "+" ) ) )
reg1 <- lm( fm1, data=df )
reg2 <- lm( fm2, data=df )
center <- 1
for( i in 1:length(controls) )
{
ave.i <- mean( unlist( df[ controls[i] ] ), na.rm=T )
center <- c( center, ave.i )
}
y.c <- sum( reg1$coefficients * center ) + reg1$residuals
x.c <- sum( reg2$coefficients * center ) + reg2$residuals
summary( lm( y.c ~ x.c ) )
samp <- sample( 1:length(x.c), 500 )
plot( x.c[samp], y.c[samp], bty="n", col=gray(0.5,0.5), pch=19, cex=1,
xlab=lab1, ylab=lab2, xlim=c(0,8), ylim=c(0,8) )
lines( stats::lowess( x.c, y.c ), col="red", lwd=2 )
abline( b=1, col="blue" )
}
d6 <- select( d4, status, bm, np, log.dist.np, log.dist.bm )
partition_reg( y=d6$status,
x=d6$log.dist.np,
controls=c("np","log.dist.bm"),
df=d6 )
partition_reg( y=d6$log.dist.bm,
x=d6$log.dist.np,
controls=c("np"),
df=d6 )
partition_reg <- function( y, x, controls, df, lab1="", lab2="" )
{
fm1 <- as.formula( paste( "y ~ ", paste( controls, collapse= "+" ) ) )
fm2 <- as.formula( paste( "x ~ ", paste( controls, collapse= "+" ) ) )
reg1 <- lm( fm1, data=df )
reg2 <- lm( fm2, data=df )
center <- 1
for( i in 1:length(controls) )
{
ave.i <- mean( unlist( df[ controls[i] ] ), na.rm=T )
center <- c( center, ave.i )
}
y.c <- sum( reg1$coefficients * center ) + reg1$residuals
x.c <- sum( reg2$coefficients * center ) + reg2$residuals
summary( lm( y.c ~ x.c ) )
samp <- sample( 1:length(x.c), 500 )
plot( x.c[samp], y.c[samp], bty="n", col=gray(0.5,0.5), pch=19, cex=1,
xlab=lab1, ylab=lab2, xlim=c(0,8), ylim=c(0,8) )
lines( stats::lowess( x.c, y.c ), col="red", lwd=2 )
abline( a=0, b=1, col="blue" )
}
d6 <- select( d4, status, bm, np, log.dist.np, log.dist.bm )
partition_reg( y=d6$status,
x=d6$log.dist.np,
controls=c("np","log.dist.bm"),
df=d6 )
partition_reg( y=d6$log.dist.bm,
x=d6$log.dist.np,
controls=c("np"),
df=d6 )
partition_reg( y=d6$log.dist.bm, lab2="Dist btwn BM",
x=d6$log.dist.np, lab1="Dist to NP",
controls=c("np"),
df=d6 )
partition_reg( y=d6$status,
x=d6$log.dist.np,
controls=c("np","log.dist.bm"),
df=d6 )
partition_reg( y=d6$log.dist.bm, lab2="Dist btwn BM",
x=d6$log.dist.np, lab1="Dist to NP",
controls=c("np"),
df=d6 )
partition_reg <- function( y, x, controls, df, lab1="", lab2="" )
{
fm1 <- as.formula( paste( "y ~ ", paste( controls, collapse= "+" ) ) )
fm2 <- as.formula( paste( "x ~ ", paste( controls, collapse= "+" ) ) )
reg1 <- lm( fm1, data=df )
reg2 <- lm( fm2, data=df )
center <- 1
for( i in 1:length(controls) )
{
ave.i <- mean( unlist( df[ controls[i] ] ), na.rm=T )
center <- c( center, ave.i )
}
y.c <- sum( reg1$coefficients * center ) + reg1$residuals
x.c <- sum( reg2$coefficients * center ) + reg2$residuals
summary( lm( y.c ~ x.c ) )
samp <- sample( 1:length(x.c), 500 )
plot( x.c[samp], y.c[samp], bty="n", col=gray(0.5,0.5), pch=19, cex=1,
xlab=lab1, ylab=lab2 ) #, xlim=c(0,8), ylim=c(0,8) )
lines( stats::lowess( x.c, y.c ), col="red", lwd=2 )
# abline( a=0, b=1, col="blue" )
}
d6 <- select( d4, status, bm, np, log.dist.np, log.dist.bm )
partition_reg( y=d6$status,
x=d6$np,
controls=c("np","log.dist.bm"),
df=d6 )
d6$bond <- ( d6$log.dist.np - d6$log.dist.bm )
partition_reg( y=d6$status, lab2="Dist btwn BM",
x=d6$bond, lab1="Dist to NP",
controls=c("np"),
df=d6 )
partition_reg( y=d6$status, lab2="BM Status",
x=d6$bond, lab1="Bonding",
controls=c("np"),
df=d6 )
partition_reg( y=d6$bond, lab2="Bonding",
x=d6$np, lab1="NP Wealth",
controls=c("np"),
df=d6 )
partition_reg( y=d6$bond, lab2="Bonding",
x=d6$bm, lab1="BM Wealth",
controls=c("status"),
df=d6 )
partition_reg( y=d6$bond, lab2="Bonding",
x=d6$np, lab1="BM Wealth",
controls=c("status"),
df=d6 )
partition_reg <- function( y, x, controls, df, lab1="", lab2="" )
{
fm1 <- as.formula( paste( "y ~ ", paste( controls, collapse= "+" ) ) )
fm2 <- as.formula( paste( "x ~ ", paste( controls, collapse= "+" ) ) )
reg1 <- lm( fm1, data=df )
reg2 <- lm( fm2, data=df )
center <- 1
for( i in 1:length(controls) )
{
ave.i <- mean( unlist( df[ controls[i] ] ), na.rm=T )
center <- c( center, ave.i )
}
y.c <- sum( reg1$coefficients * center ) + reg1$residuals
x.c <- sum( reg2$coefficients * center ) + reg2$residuals
print( summary( lm( y.c ~ x.c ) ) )
samp <- sample( 1:length(x.c), 500 )
plot( x.c[samp], y.c[samp], bty="n", col=gray(0.5,0.5), pch=19, cex=1,
xlab=lab1, ylab=lab2 ) #, xlim=c(0,8), ylim=c(0,8) )
lines( stats::lowess( x.c, y.c ), col="red", lwd=2 )
# abline( a=0, b=1, col="blue" )
}
d6 <- select( d4, status, bm, np, log.dist.np, log.dist.bm )
partition_reg( y=d6$status,
x=d6$np,
controls=c("np","log.dist.bm"),
df=d6 )
d6$bond <- ( d6$log.dist.np - d6$log.dist.bm )
partition_reg( y=d6$bond, lab2="Bonding",
x=d6$np, lab1="BM Wealth",
controls=c("status"),
df=d6 )
partition_reg( y=d6$bond, lab2="Bonding",
x=d6$bm, lab1="BM Wealth",
controls=c("status"),
df=d6 )
